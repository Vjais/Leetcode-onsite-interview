 public int maxProfit(int k, int[] p) {
        int res = 0;
        if(k > p.length/2) {
            for(int i = 1; i < p.length; i++) if(p[i] > p[i-1]) res += p[i]-p[i-1];
            return res;
        }
        
        
        int[][] dp = new int[p.length+1][k+1];
        for(int i = 1; i <= p.length; i++) {
            for(int c = 1; c <= k; c++) {
                dp[i][c] = dp[i-1][c];
                for(int j = 1; j < i; j++) {
                    dp[i][c] = Math.max(dp[i][c], dp[j-1][c-1]+ p[i-1]-p[j-1]);
                }
                res = Math.max(res, dp[i][c]);
            }
        }
        return res;
    }
